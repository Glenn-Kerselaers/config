#  Please refer to the wiki(https://github.com/nlef/moonraker-telegram-bot/wiki) for detailed information on how to configure the bot

[secrets]
secrets_path: /home/pi/printer_data/secrets.conf

[bot]
server: localhost

[camera]
host: http://localhost:8080/?action=stream

[progress_notification]
percent: 20
#height: 5
#time: 5

#[timelapse]
#cleanup: true
#height: 0.2
#time: 5
#target_fps: 30

[telegram_ui]
#eta_source: slicer
#	You can choose, which value to use for remaining time estimation.
#	Default value is slicer.
#	Allowed values: slicer, file
#buttons: [status,pause,cancel,resume],[files,emergency,macros,shutdown]
#	You can redefine, which buttons and in which position you want displayed.
#	If this is not defined, the default order is used. Buttons are defined per row, each row separated.
#	This allows you to add your own custom macros to the bot's keyboard as well. 
#	Add or replace default bot commands with "/%macro_name%. The macro listed in this section
#	should be defined in klipper config files, in UPPERCASE. Maximum macro name length is 54 chars.
#	This value is not validated automatically.
#require_confirmation_macro: true
#	This parameter makes the bot confirm, if you want to run a macro, similar to the check which happens 
#	with the "/shutdown" command.
#	Default is true.
#	This value should be boolean.
#progress_update_message: false
#	Every time status gets updated, a notification message is sent, that the progress status has been updated.
#	It gets deleted after the next status update is triggered. Setting it to false will not send notifications on progress updates.
#	Default is false.
#	This value should be boolean.	
silent_progress: true
#	If progress_update_message is set to true, setting this to "true" sends the printer status change without an alert. 
#	You still get a "red" notification. Sadly the bot API does not permit sending "grey" completely silent messages. 
#	There is no way to work around that. 
#	Default is false.
#	This value should be boolean.
#silent_commands: false
#	Sends all other messages (for example the emergency stop confirmation) without an alert.You still get a "red" notification, 
#	but it does not have sound or vibration.
#	Sadly the bot API does not permit sending "grey" completely silent messages. There is no way to work around that. 
#	Default is false.
#	This value should be boolean.
#silent_status: false
#	Sends the printer status change (error, idle etc.) without an alert. You still get a "red" notification, 
#	but it does not have sound or vibration.
#	Sadly the bot API does not permit sending "grey" completely silent messages. There is no way to work around that. 
#	Default is false.
#	This value should be boolean.
#include_macros_in_command_list: true
#	This enables in-chat autocomplete for macros. 
#	Default is true. 
#	Telegram can not handle autocompletion for commands longer than 32 symbols. Macro names which exceed this length will not get autocompleted.
#	This value should be boolean.
#hidden_macros: macro1, macro2
# 	If you have macros displayed in the auto-complete list, you may want to hide specific ones.
#	Default is not to hide any macros.
#	This value is not validated automatically.
#hidden_bot_commands: bot_restart, cancel, video
#	You may want to hide specific commands of the bot from the auto-complete list.
#	Default is not to hide any commands.
#	This value is not validated automatically.
#show_private_macros: false
#	You can decide to show service macros prefaced with a "_" in the autocomplete list.
#	Default is to hide and not autocomplete these macros.
#	This value should be boolean.
#status_message_m117_update: false
#	If you want, you can trigger a status update on the m117 command.
#	Default is not to trigger an update.
#	This value should be boolean.

#[status_message_content]
#content: progress, height, filament_length, filament_weight, print_duration, eta, finish_time, m117_status, tgnotify_status, last_update_time
#	This controls the content of the status message. You can choose to delete specific information not relevant to you.
#	Most of those parameters are self-explanatory. m117_status leaves a line to display text from the M117 gcode.
#	tgnotify_status is used to display custom information by sending the corresponding G-Code command, refer to interacting with klipper.md
#	last_updated_time displays the time, when the status message content was last updated when using status_single_message.
#	Allowed values: progress, height, filament_length, filament_weight, print_duration, eta, finish_time, m117_status, tgnotify_status, last_update_time
#sensors: mcu, ..., ...
#	You can add temperature sensors, like the "mcu" sensor to be displayed in the status message. 
#	Enter the names from your klipper config, separated by commas.
#	Default is not to display any additional temperature sensors.
#	This value is not validated automatically.
#heaters: extruder, heater_bed
#	You can add heaters, like the extruder, or the bed to be displayed in the status message. 
#	Enter the names from your klipper config, separated by commas.
#	Default is not to display any additional heaters. 
#	This value is not validated automatically.
#fans: your_fan, your_fan2
#	You can add any fans you have in the clipper config to be displayed in the status message. 
#	Enter the names from your klipper config, separated by commas.
#	Default is not to display any additional fans.
#	This value is not validated automatically.
#moonraker_devices: light, psu
#	You can add moonraker power devices to be displayed on the status message.
#	Enter the names from your moonraker config, separated by commas.
#	Default is not to display any additional devices. 
#	This value is not validated automatically.