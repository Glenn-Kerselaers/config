[exclude_object]

[force_move]
enable_force_move: True

[display_status]

[gcode_arcs]
resolution: 0.1

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[pause_resume]
recover_velocity: 300.0

[respond]
default_type: command

[gcode_macro _UserDebug]
gcode:
    {% set message  = params.MSG %}
    #{% set debug = printer["gcode_macro _User_Variables"].debug|default(False) %}
    
    #{% if debug %}
    { action_respond_info(message) }
    #{% endif %}   

[gcode_macro PID]
description: PID Hot-end and bed
gcode:
    {% set hotend = params.EXTRUDER|default(245)|int %}
    {% set bed = params.BED|default(110)|int %}

    PARKBED
    #M106 S205
    _UserDebug msg="PID bed to {bed|int} degrees celcius"
	PID_CALIBRATE HEATER=heater_bed TARGET={bed}

    G1 Z10 F1500
	M106 S64
    _UserDebug msg="PID extruder to {hotend|int} degrees celcius"
	PID_CALIBRATE HEATER=extruder TARGET={hotend}
    status_ready
	SAVE_CONFIG

######################### IDLE/SHUTDOWN #########################

[gcode_macro DISABLE_MOTORS]
description: Disable XYZE motor immediately
gcode:
    M18

[gcode_macro OFF]
description: Turn off everything
gcode:
	DISABLE_MOTORS
    TURN_OFF_HEATERS
    M107
	OFF_LEDS

#[idle_timeout]
#gcode:
#    OFF
#timeout: 10800 # 2 hrs

[delayed_gcode DELAYED_OFF]
gcode:
	OFF

[gcode_macro ON]
description: Turn on everything
gcode:
	ON_LEDS

######################### CONFIG BACKUP #########################

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method(
    "set_device_power", device="printer", state="off"
  )}

[gcode_macro SHUTDOWN]
gcode:
    OFF
    {action_respond_info('action:poweroff')}          ; OctoPrint compatible
    {action_call_remote_method("shutdown_machine")}   ; Moonraker compatible

[gcode_macro REBOOT]
gcode:
    OFF
    {action_call_remote_method("reboot_machine")}

######################### ALIASES/SHORTCUTS #########################

[gcode_macro QGL]
gcode:
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0.0
	G28
	QUAD_GANTRY_LEVEL

[gcode_macro BMC]
gcode:
	BED_MESH_CALIBRATE

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0.0
	G28
	QUAD_GANTRY_LEVEL
	G28 Z

######################### SAFETY #########################

# Lower z stepper current (in case of crash). Referenced in my klicky homing overrides and in calibrate_z.
[gcode_macro LOWERCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.35 HOLDCURRENT=0.35
	
# Returns z steppers back to their currents specified in the config.
[gcode_macro RESETCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings["tmc2209 stepper_z"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings["tmc2209 stepper_z1"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z1"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings["tmc2209 stepper_z2"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z2"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings["tmc2209 stepper_z3"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z3"].hold_current}	

[gcode_macro RESETSPEEDS]
gcode:
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
	SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
	SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 
	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 


######################### MISC #########################

##  Clear display output after Duration in seconds
##  Use: UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
[delayed_gcode _CLEAR_DISPLAY]
gcode:
  M117

## Reset SD File after Print_END or CANCEL_PRINT
## This will avoid the reprint option in Mainsail after a print is done
[delayed_gcode _DELAY_SDCARD_RESET_FILE]
gcode:
  SDCARD_RESET_FILE

##  action_respond_info will be always executed at the beginning of an macro evaluation.
##  Use _PRINT_AR if you need the order of several console outputs in the order given by the macro
##  Use: _PRINT_AR T="QGL forced by PRINT_START"
[gcode_macro _PRINT_AR]
description: Helper: Action response
gcode:
  {% if params.SHOW_LCD|default('false') == 'true' %} M117 {params.T} {% endif %}
  {action_respond_info(params.T)}

[gcode_macro GET_TEMPERATURE_FRAME_SAVE]
gcode:
	{% set temperature = params.TEMPERATURE|default(printer['temperature_sensor Frame'].temperature)|float %}
    _UserDebug msg="FRAME temperature: {temperature|float}"
    BED_MESH_PROFILE SAVE={temperature}

[gcode_macro GET_TEMPERATURE_FRAME]
gcode:
	{% set temperature = params.TEMPERATURE|default(printer['temperature_sensor Frame'].temperature)|float %}
    _UserDebug msg="FRAME temperature: {temperature|float}"

