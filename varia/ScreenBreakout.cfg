[include menu.cfg]

[display]
#    MKS Mini 12864 V3.0 Your display might have to haver connectors flipped. If the neopixels doesnt light up and you are 100% sure you have EXP1 connected to EXP1, try flipping the connector.
lcd_type: uc1701
cs_pin: mcu:EXP1_7
a0_pin: mcu:EXP1_8
rst_pin: mcu:EXP1_6
encoder_pins: ^mcu:EXP1_3,^mcu:EXP1_5
click_pin: ^!mcu:EXP1_1
contrast: 63
spi_software_sclk_pin: mcu:SPI_SCLK
spi_software_mosi_pin: mcu:SPI_MOSI
spi_software_miso_pin: mcu:SPI_MISO
display_group: __voron_display
menu_timeout: 60

[neopixel neo_display]
pin: mcu:EXP1_2
chain_count: 3
initial_RED: 0.4
initial_GREEN: 0.4
initial_BLUE: 0.4
color_order: RGB

[display_template _vheater_temperature]
param_heater_name: "extruder"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% if heater.target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}

[display_data __voron_display extruder]
position: 0, 0
text: { render("_vheater_temperature", param_heater_name="extruder") }

[display_data __voron_display fan]
position: 0, 10
text:
  {% if 'fan' in printer %}
    {% set speed = printer.fan.speed %}
    {% if speed %}
      {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:>4.0%}".format(speed) }
  {% endif %}

[display_data __voron_display bed]
position: 1, 0
text: { render("_vheater_temperature", param_heater_name="heater_bed") }

[display_data __voron_display progress_text]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { "{:^6.0%}".format(progress) }
  
[display_data __voron_display progress_text2]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { draw_progress_bar(1, 10, 6, progress) }

[display_data __voron_display printing_time]
position: 2, 10
text:
  {% set ptime = printer.idle_timeout.printing_time %}
  { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }

#########################################################
# This section defines the actual chamber temp. field,
# replace 'temperature_sensor chamber' as necessary
#########################################################
[display_data __voron_display chamber]
position: 2, 0
text:
  {% set chamber = printer['temperature_sensor Chamber'] %}
	~chamber~
	{ "%3.0f" % (chamber.temperature,) }
	~degrees~

[display_data __voron_display print_status]
position: 3, 0
text: 
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
    { "VS.402 " }
	~voron~
  {% endif %}

[display_glyph chamber]
data:
    ................
    ****************
    *....*....*....*
    *....*....*....*
    *....******....*
    *..............*
    *..............*
    *.....****.....*
    *.***.*..*.***.*
    *.....****.....*
    *......**......*
    *..............*
    *.************.*
    *...*......*...*
    ****************
    ................

[display_glyph voron]
data:
   .......**.......
   .....******.....
   ....********....
   ..************..
   .*****..**..***.
   .****..**..****.
   .***..**..*****.
   .**..**..******.
   .******..**..**.
   .*****..**..***.
   .****..**..****.
   .***..**..*****.
   ..************..
   ....********....
   .....******.....
   .......**.......